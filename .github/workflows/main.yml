name: Build VLC and Unity Plugin

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  
jobs:
  build-libvlc-android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ANDROID_ABI: [armeabi-v7a, arm64-v8a]
    container:
      image: registry.videolan.org/vlc-debian-android:20250626142950
      options: --user root
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Build VLC Android
        run: |
          git clone https://code.videolan.org/videolan/vlc-android && cd vlc-android
          git clone https://code.videolan.org/videolan/libvlcjni && cd libvlcjni
          git clone https://code.videolan.org/videolan/vlc/ --depth=1
          cd ..
          ANDROID_HOME=/sdk/android-sdk-linux ./buildsystem/compile.sh -l -b -r -a ${{ matrix.ANDROID_ABI }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libvlc-android-${{ matrix.ANDROID_ABI }}
          path: vlc-android/**

  build-unity-plugin-android:
    runs-on: ubuntu-latest
    needs: build-libvlc-android
    strategy:
      matrix:
        ANDROID_ABI: [armeabi-v7a, arm64-v8a]
    container:
      image: registry.videolan.org/vlc-debian-android:20241118101328
      options: --user root
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Download libVLC artifacts
        uses: actions/download-artifact@v4
        with:
          name: libvlc-android-${{ matrix.ANDROID_ABI }}
          path: vlc-android
      - name: Build Unity Plugin
        run: |
          export PATH="$HOME/sandbox/bin:$PATH"
          PKG_CONFIG_PATH=./vlc-android/libvlcjni/libvlc/jni/pkgconfig/${{ matrix.ANDROID_ABI }} meson setup --cross-file=cross/android-${{ matrix.ANDROID_ABI }}-ndk25.txt build_android_${{ matrix.ANDROID_ABI }} --buildtype release
          ninja -C build_android_${{ matrix.ANDROID_ABI }}
      - name: Upload Unity Plugin Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: unity-plugin-android-${{ matrix.ANDROID_ABI }}
          path: |
            build_android_${{ matrix.ANDROID_ABI }}/PluginSource/libVLCUnityPlugin.so
            vlc-android/libvlcjni/libvlc/jni/libs/${{ matrix.ANDROID_ABI }}/libvlc.so
            vlc-android/libvlcjni/libvlc/jni/libs/${{ matrix.ANDROID_ABI }}/libc++_shared.so

  build-libvlcsharp:
    runs-on: ubuntu-latest
    container:
      image: registry.videolan.org/vlc-debian-unstable:20240402131352
      options: --user root
    strategy:
      matrix:
        variant: [unity_all]
    env:
      DOTNET_SDK_URL: https://download.visualstudio.microsoft.com/download/pr/db901b0a-3144-4d07-b8ab-6e7a43e7a791/4d9d1b39b879ad969c6c0ceb6d052381/dotnet-sdk-8.0.401-linux-x64.tar.gz
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download .NET SDK
        run: |
          wget $DOTNET_SDK_URL -O dotnet-sdk.tar.gz
          mkdir -p $HOME/dotnet && tar zxf dotnet-sdk.tar.gz -C $HOME/dotnet
          echo "DOTNET_ROOT=$HOME/dotnet" >> $GITHUB_ENV
          echo "$HOME/dotnet" >> $GITHUB_PATH

      - name: Clone LibVLCSharp and Build
        run: |
          mkdir tmp && cd tmp
          git clone https://code.videolan.org/videolan/LibVLCSharp lvs
          cd lvs
          git checkout -f master
          if [ "${{ matrix.variant }}" = "unity_all" ]; then
            ARGS="/p:UNITY=true"
          elif [ "${{ matrix.variant }}" = "unity_ios" ]; then
            ARGS="/p:UNITY_IOS=true"
          else
            ARGS=""
          fi
          dotnet build src/LibVLCSharp/LibVLCSharp.csproj $ARGS -c Release

      - name: Copy Build Output
        run: |
          mkdir -p nightlies
          cp -r tmp/lvs/src/LibVLCSharp/bin/Release/netstandard2.0 nightlies

      - name: Upload LibVLCSharp Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libvlcsharp-${{ matrix.variant }}
          path: nightlies
  
  build-libvlc-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        ARCH: [aarch64]
    env:
      ARGS: -i z -c -g l
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Build VLC for macOS
        run: |
          git clone https://code.videolan.org/videolan/vlc
          cd vlc
          mkdir build && cd build
          ../extras/package/macosx/build.sh ${ARGS} -a ${{ matrix.ARCH }}
          # Remove symbolic link files
          rm -rf macos-install/lib/libvlc.dylib
          rm -rf macos-install/lib/libvlccore.dylib
          mv macos-install/lib/libvlc.12.dylib macos-install/lib/libvlc.dylib
          mv macos-install/lib/libvlccore.9.dylib macos-install/lib/libvlccore.dylib
      - name: Upload macOS libvlc artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libvlc-macos-${{ matrix.ARCH }}
          path: |
            vlc/build/macos-install/include/*
            vlc/build/macos-install/libexec/*
            vlc/build/macos-install/lib/pkgconfig/*
            vlc/build/macos-install/lib/vlc/**/*.dylib
            vlc/build/macos-install/lib/libvlc.dylib
            vlc/build/macos-install/lib/libvlccore.dylib

  build-unity-plugin-macos:
    runs-on: macos-latest
    needs: build-libvlc-macos
    strategy:
      matrix:
        ARCH: [aarch64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Download macOS libvlc artifacts
        uses: actions/download-artifact@v4
        with:
          name: libvlc-macos-${{ matrix.ARCH }}
          path: vlc
      - name: Build Unity Plugin for macOS
        run: |
          cd vlc/build/macos-install
          sed -i '' "1s|.*|prefix=$(pwd | sed 's#/#\\\/#g')|" lib/pkgconfig/libvlc.pc
          export PATH="$HOME/sandbox/bin:$PATH"
          cd ../../..
          PKG_CONFIG_PATH=./vlc/build/macos-install/lib/pkgconfig meson setup build_${{ matrix.ARCH }} --buildtype release
          ninja -C build_${{ matrix.ARCH }}
          mv "build_${{ matrix.ARCH }}/PluginSource/libVLCUnityPlugin.1.dylib" "build_${{ matrix.ARCH }}/PluginSource/libVLCUnityPlugin.dylib"
          install_name_tool -add_rpath @loader_path/ build_${{ matrix.ARCH }}/PluginSource/libVLCUnityPlugin.dylib
      - name: Upload Unity Plugin macOS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: unity-plugin-macos-${{ matrix.ARCH }}
          path: build_${{ matrix.ARCH }}/PluginSource/libVLCUnityPlugin.dylib

